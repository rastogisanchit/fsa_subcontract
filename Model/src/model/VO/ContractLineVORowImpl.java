package model.VO;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 21 17:15:13 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractLineVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        BoqNumber {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getBoqNumber();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setBoqNumber((String)value);
            }
        }
        ,
        BoqDescription {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getBoqDescription();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setBoqDescription((String)value);
            }
        }
        ,
        UnitOfMeasure {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getUnitOfMeasure();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setUnitOfMeasure((String)value);
            }
        }
        ,
        Quantity {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getQuantity();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setQuantity((String)value);
            }
        }
        ,
        Rate {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getRate();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setRate((String)value);
            }
        }
        ,
        Amount {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getAmount();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setAmount((String)value);
            }
        }
        ,
        ContractNumber {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getContractNumber();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setContractNumber((String)value);
            }
        }
        ,
        Supplier {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getSupplier();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setSupplier((String)value);
            }
        }
        ,
        SupplierSiteName {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getSupplierSiteName();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setSupplierSiteName((String)value);
            }
        }
        ,
       
        ContractLineVO1 {
            public Object get(ContractLineVORowImpl obj) {
                return obj.getContractLineVO1();
            }

            public void put(ContractLineVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ContractLineVORowImpl object);

        public abstract void put(ContractLineVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int BOQNUMBER = AttributesEnum.BoqNumber.index();
    public static final int BOQDESCRIPTION = AttributesEnum.BoqDescription.index();
    public static final int UNITOFMEASURE = AttributesEnum.UnitOfMeasure.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int CONTRACTNUMBER = AttributesEnum.ContractNumber.index();
    public static final int SUPPLIER = AttributesEnum.Supplier.index();
    public static final int SUPPLIERSITENAME = AttributesEnum.SupplierSiteName.index();
   public static final int CONTRACTLINEVO1 = AttributesEnum.ContractLineVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ContractLineVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BoqNumber.
     * @return the BoqNumber
     */
    public String getBoqNumber() {
        return (String) getAttributeInternal(BOQNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BoqNumber.
     * @param value value to set the  BoqNumber
     */
    public void setBoqNumber(String value) {
        setAttributeInternal(BOQNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BoqDescription.
     * @return the BoqDescription
     */
    public String getBoqDescription() {
        return (String) getAttributeInternal(BOQDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BoqDescription.
     * @param value value to set the  BoqDescription
     */
    public void setBoqDescription(String value) {
        setAttributeInternal(BOQDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitOfMeasure.
     * @return the UnitOfMeasure
     */
    public String getUnitOfMeasure() {
        return (String) getAttributeInternal(UNITOFMEASURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitOfMeasure.
     * @param value value to set the  UnitOfMeasure
     */
    public void setUnitOfMeasure(String value) {
        setAttributeInternal(UNITOFMEASURE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Quantity.
     * @return the Quantity
     */
    public String getQuantity() {
        return (String) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Quantity.
     * @param value value to set the  Quantity
     */
    public void setQuantity(String value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Rate.
     * @return the Rate
     */
    public String getRate() {
        return (String) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Rate.
     * @param value value to set the  Rate
     */
    public void setRate(String value) {
        setAttributeInternal(RATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Amount.
     * @return the Amount
     */
    public String getAmount() {
        return (String) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Amount.
     * @param value value to set the  Amount
     */
    public void setAmount(String value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContractNumber.
     * @return the ContractNumber
     */
    public String getContractNumber() {
        return (String) getAttributeInternal(CONTRACTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContractNumber.
     * @param value value to set the  ContractNumber
     */
    public void setContractNumber(String value) {
        setAttributeInternal(CONTRACTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Supplier.
     * @return the Supplier
     */
    public String getSupplier() {
        return (String) getAttributeInternal(SUPPLIER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Supplier.
     * @param value value to set the  Supplier
     */
    public void setSupplier(String value) {
        setAttributeInternal(SUPPLIER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierSiteName.
     * @return the SupplierSiteName
     */
    public String getSupplierSiteName() {
        return (String) getAttributeInternal(SUPPLIERSITENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupplierSiteName.
     * @param value value to set the  SupplierSiteName
     */
    public void setSupplierSiteName(String value) {
        setAttributeInternal(SUPPLIERSITENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LineAmount.
     * @return the LineAmount
     */
   

    /**
     * Gets the view accessor <code>RowSet</code> ContractLineVO1.
     */
    public RowSet getContractLineVO1() {
        return (RowSet)getAttributeInternal(CONTRACTLINEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
